/**
 * @author Markus Chiarot
 * @website https://github.com/zampage/mosaic-creator#readme 
 * @version 0.0.1
 * @license MIT
 */
function createMosaic(t){_.each(t,function(t,e){copyCtx.fillStyle=getColorString(t.rgb),copyCtx.fillRect(t.x,t.y,mosaicWidth,mosaicHeight)})}function analyzeImage(){return new Promise(function(t,e){for(var a=$canvas.get(0).width,n=$canvas.get(0).height,o=[],r=0;r<a;r+=mosaicWidth)for(var g=0;g<n;g+=mosaicHeight){var i=ctx.getImageData(r,g,mosaicWidth,mosaicHeight).data,c=_.groupBy(i,function(t,e){return Math.floor(e/4)}),h={x:r,y:g,rgb:{r:0,g:0,b:0}};c=_.toArray(c),_.each(c,function(t,e){h.rgb.r+=t[0],h.rgb.g+=t[1],h.rgb.b+=t[2]}),h.rgb.r=Math.floor(h.rgb.r/c.length),h.rgb.g=Math.floor(h.rgb.g/c.length),h.rgb.b=Math.floor(h.rgb.b/c.length),o.push(h)}t(o)})}function getExampleImage(){return new Promise(function(t,e){var a=new Image;a.onload=function(){t(this)},a.onerror=e,a.src="img/pigeon.jpg"})}function setupCanvas(t){return new Promise(function(e,a){var n=$(".stage"),o=$("<canvas></canvas>");o.get(0).height=t.height,o.get(0).width=t.width,o.appendTo(n);var r=o.get(0).getContext("2d");r.drawImage(t,0,0,t.width,t.height),e([o,r,t])})}function setupCopyCanvas(t){return new Promise(function(e,a){var n=$(".stage"),o=t.clone(),r=o.get(0).getContext("2d");r.clearRect(0,0,o.get(0).width,o.get(0).height),o.appendTo(n),e([o,r])})}function getColorString(t){return"rgb("+t.r+", "+t.g+", "+t.b+")"}var $canvas,ctx,originalImage,pixelData,mosaicWidth=10,mosaicHeight=10;getExampleImage().then(setupCanvas).then(function(t){$canvas=t[0],ctx=t[1],originalImage=t[2]}).then(analyzeImage).then(function(t){return pixelData=t,$canvas}).then(setupCopyCanvas).then(function(t){return $copyCanvas=t[0],copyCtx=t[1],pixelData}).then(createMosaic).catch(function(t){console.log(t)});
//# sourceMappingURL=maps/mosaic.min.js.map
